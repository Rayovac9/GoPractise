// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

// Injectors from wire.go:

func InitializeEvent() (Event, error) {
	message := NewMessage()
	greeter, err := NewGreeter(message)
	if err != nil {
		return Event{}, err
	}
	event, err := NewEvent(greeter)
	if err != nil {
		return Event{}, err
	}
	return event, nil
}

// wire.go:

type Message string

type Greeter struct {
	Message Message
}

type Event struct {
	Greeter Greeter
}

func NewMessage() Message {
	return Message("Hi there!")
}

func NewGreeter(m Message) (Greeter, error) {
	return Greeter{Message: m}, nil
}

func NewEvent(g Greeter) (Event, error) {
	return Event{Greeter: g}, nil
}
